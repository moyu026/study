import torch

a=torch.rand(3,4)
b=torch.rand(4)

c1=a+b # 维度不同，广播
c2=torch.add(a,b)
'''tensor([[0.5979, 0.3614, 1.2784, 0.6257],
        [0.5249, 0.6785, 1.0840, 0.3215],
        [0.9499, 0.8675, 1.7774, 0.9563]])'''

d1=a-b
d2=torch.sub(a,b)
'''tensor([[-0.0300,  0.2366, -0.3367,  0.1732],
        [-0.0479,  0.4108, -0.0041,  0.1776],
        [-0.3391,  0.2807, -0.3710, -0.0777]])'''

e1=a*b
e2=torch.mul(a,b)
'''tensor([[0.2659, 0.4318, 0.1501, 0.1266],
        [0.0435, 0.0676, 0.0755, 0.1296],
        [0.0023, 0.5065, 0.3815, 0.1031]])'''

f1=a/b
f2=torch.div(a,b)
'''tensor([[0.2088, 1.2453, 0.5863, 0.5797],
        [0.9578, 0.9920, 0.6465, 0.0183],
        [1.1689, 0.4025, 0.3403, 0.3292]])
'''

a=torch.tensor([[3.,3.],
                [3.,3.]])
b=torch.ones(2,2)
'''tensor([[1., 1.],
        [1., 1.]])'''
c=torch.matmul(a,b) # 矩阵相乘（matmul,mm,@三种形式）
'''tensor([[6., 6.],
        [6., 6.]])
'''

# 例子 把784维降到512维
a=torch.rand(4,784)
x=torch.rand(4,784)
w=torch.rand(512,784)  # （ch-in,ch-out)
c=(x@w.t()).shape
'''torch.Size([4, 512])'''

a=torch.rand(4,3,28,64)
b=torch.rand(4,3,64,32)
c=torch.matmul(a,b).shape #  前面两维度不变只进行后两维度矩阵计算
'''torch.Size([4, 3, 28, 32])'''

a=torch.rand(4,3,28,64)
b=torch.rand(4,1,64,32)
c=torch.matmul(a,b).shape  # 前面维度不同的进行广播，后面两维矩阵计算
'''torch.Size([4, 3, 28, 32])'''


#  幂运算

a=torch.full([2,2],3.)
'''tensor([[3., 3.],
        [3., 3.]])'''
b=a.pow(2)  # 2次方
'''tensor([[9., 9.],
        [9., 9.]])'''

c=b.sqrt()  # 平方根
'''tensor([[3., 3.],
        [3., 3.]])'''

d=b.rsqrt() # 平方根的倒数
'''tensor([[0.3333, 0.3333],
        [0.3333, 0.3333]])'''

f1=a**(2)  # 平方
'''tensor([[9., 9.],
        [9., 9.]])'''
f2=a**(0.5) # 0.5次方
'''tensor([[1.7321, 1.7321],
        [1.7321, 1.7321]])'''

a=torch.exp(torch.ones(2,2))  # e的幂指数
'''tensor([[2.7183, 2.7183],
        [2.7183, 2.7183]])'''
a1=torch.log(a)      # log的对数
'''tensor([[1., 1.],
        [1., 1.]])
'''
a2=torch.log2(a)    # log2的对数
'''tensor([[1.4427, 1.4427],
        [1.4427, 1.4427]])'''


# 取整，取小数，四舍五入
a=torch.tensor(3.14)
b1=a.floor() # 向下取整 tensor(3.)
b2=a.ceil()  # 向上取整 tensor(4.)
b3=a.trunc() # 取整    tensor(3.)
b4=a.frac()  # 取小数   tensor(0.1400)

a=torch.tensor(4.49)
b=a.round()  # 四舍五入 tensor(4.)
a=torch.tensor(4.56)
b=a.round()  # 四舍五入 tensor(5.)


#  clamp
grad=torch.rand(2,3)*15
mid=grad.median() # 中间值（中位数）
'''tensor(10.1300)'''
b=grad.clamp(10) # 最小值限定为10,比10小的数变为10
'''tensor([[10.0000, 10.0000, 14.2193],
        [11.0127, 12.0498, 10.0000]])'''

c=grad.clamp(0,10) # 取(0,10)中间的数，比10大的取10
'''tensor([[ 2.1457, 10.0000,  7.7365],
        [ 6.2291, 10.0000,  6.7319]])'''
print(c)

